name: Update SVG with GitHub Data

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  update-svg:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Get GitHub Repo Info
      id: repo_info
      run: |
        # Get all repositories
        REPOS=$(curl -s https://api.github.com/users/alexisseurin/repos | jq -r '.[].full_name')

        # Initialize counters
        TOTAL_STARS=0
        TOTAL_COMMITS=0

        # Loop through each repository to get stars and commits
        for REPO in $REPOS; do
          # Get stars count for the current repo
          STARS=$(curl -s https://api.github.com/repos/$REPO | jq .stargazers_count)
          TOTAL_STARS=$((TOTAL_STARS + STARS))

          # Get the number of commits in the default branch of the current repo
          COMMITS=$(curl -s https://api.github.com/repos/$REPO | jq '. | .default_branch' | xargs -I {} curl -s https://api.github.com/repos/$REPO/commits?per_page=1\&sha={} | jq -r '.[0].commit.tree.sha' | xargs -I {} curl -s https://api.github.com/repos/$REPO/git/trees/{}?recursive=1 | jq '.tree | length')
          TOTAL_COMMITS=$((TOTAL_COMMITS + COMMITS))
        done

        # Export environment variables
        echo "stars=$TOTAL_STARS" >> $GITHUB_ENV
        echo "commits=$TOTAL_COMMITS" >> $GITHUB_ENV

    - name: Update SVG
      run: |
        # Update stars in SVG
        sed -i "s/<tspan id=\"stars\">.*<\/tspan>/<tspan id=\"stars\">${{ env.stars }}<\/tspan>/" ../bento.svg
        # Update commits in SVG
        sed -i "s/<tspan id=\"commits\">.*<\/tspan>/<tspan id=\"commits\">${{ env.commits }}<\/tspan>/" ../bento.svg

    - name: Check for changes
      id: check_changes
      run: |
        git config --local user.email "alexis.seurin@gmail.com"
        git config --local user.name "Alexis Seurin"
        git add ../bento.svg
        if git diff --cached --exit-code --quiet; then
          echo "no_changes=true" >> $GITHUB_ENV
        else
          echo "no_changes=false" >> $GITHUB_ENV
        fi
  
    - name: Commit Changes
      if: env.no_changes == 'false'
      run: |
        git commit -m "Update SVG with latest GitHub data"
    
    - name: Push Changes
      if: env.no_changes == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin HEAD:main
